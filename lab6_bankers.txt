#include <stdio.h>
void printMatrix(int mat[5][4]) {
	int i, j;
	for (i=0; i<5; i++) {
		for (j=0; j<4; j++) {
			printf("%d ", mat[i][j]);
		}
		printf("\n");
	}
}
int main()
{
	int n, m, i, j, k;
	n = 5;
	m = 4;
	int alloc[5][4] = {
	{ 0, 0, 1, 2 },
	{ 1, 0, 0, 0 },
	{ 1, 3, 5, 4 },
	{ 0, 6, 3, 2 },
	{ 0, 0, 1, 4 }
	};
	int max[5][4] = {
	{ 0, 0, 1, 2 },
	{ 1, 7, 5, 0 },
	{ 2, 3, 5, 6 },
	{ 0, 6, 5, 2 },
	{ 0, 6, 5, 6 }
	};
	int avail[4] = { 1, 5, 2, 0 };
	int need[5][4];
	int f[5], ans[5], flag, ind = 0;
	int y = 0;
	for (i = 0; i < n; i++) {
		f[i] = 0;
	}
	for (i = 0; i < n; i++) {
		for (j = 0; j < m; j++) {
			need[i][j] = max[i][j] - alloc[i][j];
		}
	}
	printf("Allocation matrix\n");
	printMatrix(alloc);
	printf("\nMax matrix\n");
	printMatrix(max);
	printf("\nNeed matrix\n");
	printMatrix(need);
	printf("\nAvailable matrix\n");
	for (k = 0; k < n; k++) {
		for (i = 0; i < n; i++) {
			if (f[i] == 0) {
				flag = 0;
				for (j = 0; j < m; j++) {
					if (need[i][j] > avail[j]){
						flag = 1;
						break;
					}
				}
				if (flag == 0) {
					ans[ind++] = i;
					for (y = 0; y < m; y++)
						avail[y] += alloc[i][y];
					f[i] = 1;
				}
			}
		}
		for (i=0; i<m; i++) {
			printf("%d ", avail[i]);
		}
		printf("\n");
	}
	printf("\n");
	flag = 1;
	for(int i=0;i<n;i++) {
		if(f[i]==0) {
			flag=0;
			printf("The following system is not safe");
			break;
		}
	}
	if(flag==1) {
		printf("Following is the SAFE Sequence\n");
		for (i = 0; i < n - 1; i++)
			printf(" P%d ->", ans[i]);
		printf(" P%d", ans[n - 1]);
	}
	printf("\n");
	return (0);
}

